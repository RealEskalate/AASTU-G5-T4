[
    { "id": 1, "contestId": null, "trackId": 1, "name": "Two Sum", "difficulty": "Easy", "tag": "Array, Hash Table", "platform": "LeetCode", "link": "https://example.com/problems/1", "createdAt": "2023-01-01T10:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-10-01T10:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 8, "contestId": null, "trackId": 1, "name": "Sort Colors", "difficulty": "Medium", "tag": "Sorting, Array, Two Pointers", "platform": "LeetCode", "link": "https://example.com/problems/8", "createdAt": "2023-01-15T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-10-20T14:00:00Z", "isFavorite": false, "notes": "Dutch National Flag.", "solutionLink": null },
    { "id": 9, "contestId": null, "trackId": 1, "name": "K Closest Points to Origin", "difficulty": "Medium", "tag": "Sorting, Heap, Divide and Conquer", "platform": "LeetCode", "link": "https://example.com/problems/9", "createdAt": "2023-01-16T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-10-21T10:30:00Z", "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 10, "contestId": null, "trackId": 1, "name": "Merge Intervals", "difficulty": "Medium", "tag": "Sorting, Array, Greedy", "platform": "LeetCode", "link": "https://example.com/problems/10", "createdAt": "2023-01-17T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": "(Optional Problem)", "solutionLink": null },
    { "id": 19, "contestId": null, "trackId": 3, "name": "Max Number of K-Sum Pairs", "difficulty": "Medium", "tag": "Array, Hash Table, Two Pointers", "platform": "LeetCode", "link": "https://example.com/problems/19", "createdAt": "2023-01-20T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-09-15T16:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 23, "contestId": null, "trackId": 1, "name": "Pancake Sorting", "difficulty": "Hard", "tag": "Array, Two Pointers, Greedy, Sorting", "platform": "LeetCode", "link": "https://example.com/problems/23", "createdAt": "2023-01-22T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-09-01T11:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 50, "contestId": null, "trackId": 4, "name": "Kth Symbol in Grammar", "difficulty": "Medium", "tag": "Recursion, Math, Bit Manipulation", "platform": "LeetCode", "link": "https://example.com/problems/50", "createdAt": "2023-02-10T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-10-25T10:00:00Z", "isFavorite": false, "notes": "Recursive pattern.", "solutionLink": null },
    { "id": 101, "contestId": null, "trackId": 3, "name": "Subarray Sum Equals K", "difficulty": "Medium", "tag": "Array, Hash Table, Prefix Sum", "platform": "LeetCode", "link": "https://example.com/problems/101", "createdAt": "2023-02-15T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-10-26T09:00:00Z", "isFavorite": true, "notes": "Prefix sum essential.", "solutionLink": null },
    { "id": 102, "contestId": null, "trackId": 3, "name": "Range Sum Query 2D - Immutable", "difficulty": "Medium", "tag": "Array, Matrix, Prefix Sum", "platform": "LeetCode", "link": "https://example.com/problems/102", "createdAt": "2023-02-16T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 103, "contestId": null, "trackId": 3, "name": "Product of Array Except Self", "difficulty": "Medium", "tag": "Array, Prefix Sum", "platform": "LeetCode", "link": "https://example.com/problems/103", "createdAt": "2023-02-17T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-10-19T15:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 113, "contestId": null, "trackId": 2, "name": "Course Schedule", "difficulty": "Medium", "tag": "Graphs, Topological sort, DFS, BFS", "platform": "LeetCode", "link": "https://example.com/problems/113", "createdAt": "2023-03-01T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-08-10T10:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 115, "contestId": null, "trackId": 2, "name": "Find Eventual Safe States", "difficulty": "Medium", "tag": "Graphs, Topological sort, DFS", "platform": "LeetCode", "link": "https://example.com/problems/115", "createdAt": "2023-03-02T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 128, "contestId": null, "trackId": 5, "name": "Number of Provinces", "difficulty": "Medium", "tag": "Graphs, Union Find, DFS, BFS", "platform": "LeetCode", "link": "https://example.com/problems/128", "createdAt": "2023-03-10T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-07-20T13:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 130, "contestId": null, "trackId": 5, "name": "Accounts Merge", "difficulty": "Medium", "tag": "Graphs, Union Find, DFS, String", "platform": "LeetCode", "link": "https://example.com/problems/130", "createdAt": "2023-03-11T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": "Tricky UF implementation.", "solutionLink": null },
    { "id": 131, "contestId": null, "trackId": 5, "name": "Min Cost to Connect All Points", "difficulty": "Medium", "tag": "Graphs, Union Find, MST", "platform": "LeetCode", "link": "https://example.com/problems/131", "createdAt": "2023-03-12T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 133, "contestId": null, "trackId": 6, "name": "Implement Trie (Prefix Tree)", "difficulty": "Medium", "tag": "Trie, Design, Hash Table", "platform": "LeetCode", "link": "https://example.com/problems/133", "createdAt": "2023-04-01T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-06-15T09:30:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 134, "contestId": null, "trackId": 6, "name": "Top K Frequent Words", "difficulty": "Medium", "tag": "Trie, Hash Table, Heap, Sorting", "platform": "LeetCode", "link": "https://example.com/problems/134", "createdAt": "2023-04-02T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-06-16T11:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 136, "contestId": null, "trackId": 6, "name": "Design Add and Search Words", "difficulty": "Medium", "tag": "Trie, Design, DFS, Backtracking", "platform": "LeetCode", "link": "https://example.com/problems/136", "createdAt": "2023-04-03T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 148, "contestId": null, "trackId": 7, "name": "Letter Combinations of a Phone Number", "difficulty": "Medium", "tag": "String, Backtracking, Hash Table", "platform": "LeetCode", "link": "https://example.com/problems/148", "createdAt": "2023-04-10T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-05-20T16:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 172, "contestId": null, "trackId": 1, "name": "Height Checker", "difficulty": "Easy", "tag": "Sorting, Array", "platform": "LeetCode", "link": "https://example.com/problems/172", "createdAt": "2023-01-10T10:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 780, "contestId": 514, "trackId": 2, "name": "Fox And Names", "difficulty": "1800", "tag": "Topological sort, Graphs, DFS", "platform": "Codeforces", "link": "https://example.com/problems/780", "createdAt": "2023-01-11T11:00:00Z", "updatedAt": "2023-05-15T09:00:00Z", "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": "Classic topo sort.", "solutionLink": null },
    { "id": 1001, "contestId": null, "trackId": 1, "name": "Two Sum - Variation A", "difficulty": "Easy", "tag": "Array, Hash Table", "platform": "LeetCode", "link": "https://example.com/problems/1001", "createdAt": "2023-05-01T10:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 1008, "contestId": null, "trackId": 1, "name": "Sort Colors - Revisit", "difficulty": "Medium", "tag": "Sorting, Array, Two Pointers", "platform": "Codeforces", "link": "https://example.com/problems/1008", "createdAt": "2023-05-02T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1009, "contestId": null, "trackId": 1, "name": "K Closest Points - QuickSelect", "difficulty": "Medium", "tag": "Heap, Divide and Conquer, QuickSelect", "platform": "LeetCode", "link": "https://example.com/problems/1009", "createdAt": "2023-05-03T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-01T10:30:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1010, "contestId": null, "trackId": 1, "name": "Merge Intervals - Sweep Line", "difficulty": "Medium", "tag": "Sorting, Array, Sweep Line", "platform": "HackerRank", "link": "https://example.com/problems/1010", "createdAt": "2023-05-04T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 1019, "contestId": null, "trackId": 3, "name": "K-Sum Pairs - Optimization", "difficulty": "Medium", "tag": "Array, Hash Table, Sorting", "platform": "LeetCode", "link": "https://example.com/problems/1019", "createdAt": "2023-05-05T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-02T16:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1023, "contestId": null, "trackId": 1, "name": "Pancake Sorting - Analysis", "difficulty": "Hard", "tag": "Array, Greedy, Sorting", "platform": "Codeforces", "link": "https://example.com/problems/1023", "createdAt": "2023-05-06T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1050, "contestId": null, "trackId": 4, "name": "Grammar Kth Symbol - Iterative", "difficulty": "Medium", "tag": "Recursion, Math", "platform": "LeetCode", "link": "https://example.com/problems/1050", "createdAt": "2023-05-07T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 1101, "contestId": null, "trackId": 3, "name": "Subarray Sum K - Edge Cases", "difficulty": "Medium", "tag": "Array, Prefix Sum", "platform": "HackerRank", "link": "https://example.com/problems/1101", "createdAt": "2023-05-08T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-03T09:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1102, "contestId": null, "trackId": 3, "name": "Range Query 2D - Mutable?", "difficulty": "Hard", "tag": "Array, Matrix, Segment Tree, Fenwick Tree", "platform": "LeetCode", "link": "https://example.com/problems/1102", "createdAt": "2023-05-09T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": "Requires advanced DS", "solutionLink": null },
    { "id": 1103, "contestId": null, "trackId": 3, "name": "Product Except Self - Constant Space", "difficulty": "Medium", "tag": "Array, Prefix Sum", "platform": "Codeforces", "link": "https://example.com/problems/1103", "createdAt": "2023-05-10T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-04T15:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1113, "contestId": null, "trackId": 2, "name": "Course Schedule II", "difficulty": "Medium", "tag": "Graphs, Topological sort, DFS, BFS", "platform": "LeetCode", "link": "https://example.com/problems/1113", "createdAt": "2023-05-11T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1115, "contestId": null, "trackId": 2, "name": "Safe States - Cycle Detection", "difficulty": "Medium", "tag": "Graphs, Topological sort, DFS", "platform": "HackerRank", "link": "https://example.com/problems/1115", "createdAt": "2023-05-12T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-05T11:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1128, "contestId": null, "trackId": 5, "name": "Number of Islands", "difficulty": "Medium", "tag": "Graphs, Union Find, DFS, BFS", "platform": "LeetCode", "link": "https://example.com/problems/1128", "createdAt": "2023-05-13T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-06T13:00:00Z", "isFavorite": true, "notes": "Classic Graph Traversal", "solutionLink": null },
    { "id": 1130, "contestId": null, "trackId": 5, "name": "Accounts Merge - Path Compression", "difficulty": "Hard", "tag": "Graphs, Union Find, DFS", "platform": "Codeforces", "link": "https://example.com/problems/1130", "createdAt": "2023-05-14T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1131, "contestId": null, "trackId": 5, "name": "Min Cost MST - Kruskal vs Prim", "difficulty": "Medium", "tag": "Graphs, Union Find, MST, Heap", "platform": "LeetCode", "link": "https://example.com/problems/1131", "createdAt": "2023-05-15T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-07T14:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1133, "contestId": null, "trackId": 6, "name": "Implement Trie II (Prefix & Count)", "difficulty": "Medium", "tag": "Trie, Design", "platform": "HackerRank", "link": "https://example.com/problems/1133", "createdAt": "2023-05-16T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1134, "contestId": null, "trackId": 6, "name": "Top K Frequent Elements", "difficulty": "Medium", "tag": "Hash Table, Heap, Sorting", "platform": "LeetCode", "link": "https://example.com/problems/1134", "createdAt": "2023-05-17T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-08T11:00:00Z", "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 1136, "contestId": null, "trackId": 6, "name": "Add and Search Word - Wildcard", "difficulty": "Medium", "tag": "Trie, Design, DFS", "platform": "Codeforces", "link": "https://example.com/problems/1136", "createdAt": "2023-05-18T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1148, "contestId": null, "trackId": 7, "name": "Phone Combinations - Iterative", "difficulty": "Medium", "tag": "String, Backtracking, Queue", "platform": "LeetCode", "link": "https://example.com/problems/1148", "createdAt": "2023-05-19T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1172, "contestId": null, "trackId": 1, "name": "Contains Duplicate", "difficulty": "Easy", "tag": "Array, Hash Table, Sorting", "platform": "HackerRank", "link": "https://example.com/problems/1172", "createdAt": "2023-05-20T10:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-09T10:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 1780, "contestId": 600, "trackId": 2, "name": "Alien Dictionary", "difficulty": "Hard", "tag": "Topological sort, Graphs, DFS", "platform": "LeetCode", "link": "https://example.com/problems/1780", "createdAt": "2023-05-21T11:00:00Z", "updatedAt": "2023-06-15T09:00:00Z", "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": "Similar to Fox and Names", "solutionLink": null },
  
    { "id": 2001, "contestId": null, "trackId": 1, "name": "Three Sum", "difficulty": "Medium", "tag": "Array, Two Pointers, Sorting", "platform": "LeetCode", "link": "https://example.com/problems/2001", "createdAt": "2023-06-01T10:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-10T10:00:00Z", "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 2008, "contestId": null, "trackId": 1, "name": "Sort Characters By Frequency", "difficulty": "Medium", "tag": "Sorting, Hash Table, Heap", "platform": "Codeforces", "link": "https://example.com/problems/2008", "createdAt": "2023-06-02T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2009, "contestId": null, "trackId": 1, "name": "Kth Largest Element in an Array", "difficulty": "Medium", "tag": "Heap, Divide and Conquer, QuickSelect", "platform": "LeetCode", "link": "https://example.com/problems/2009", "createdAt": "2023-06-03T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-11T10:30:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2010, "contestId": null, "trackId": 1, "name": "Non-overlapping Intervals", "difficulty": "Medium", "tag": "Sorting, Array, Greedy", "platform": "HackerRank", "link": "https://example.com/problems/2010", "createdAt": "2023-06-04T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-12T11:00:00Z", "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 2019, "contestId": null, "trackId": 3, "name": "4Sum II", "difficulty": "Medium", "tag": "Array, Hash Table", "platform": "LeetCode", "link": "https://example.com/problems/2019", "createdAt": "2023-06-05T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2023, "contestId": null, "trackId": 1, "name": "Sort Array By Parity", "difficulty": "Easy", "tag": "Array, Two Pointers, Sorting", "platform": "Codeforces", "link": "https://example.com/problems/2023", "createdAt": "2023-06-06T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-13T11:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2050, "contestId": null, "trackId": 4, "name": "Fibonacci Number", "difficulty": "Easy", "tag": "Recursion, Math, DP", "platform": "LeetCode", "link": "https://example.com/problems/2050", "createdAt": "2023-06-07T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-14T10:00:00Z", "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 2101, "contestId": null, "trackId": 3, "name": "Continuous Subarray Sum", "difficulty": "Medium", "tag": "Array, Prefix Sum, Hash Table", "platform": "HackerRank", "link": "https://example.com/problems/2101", "createdAt": "2023-06-08T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2102, "contestId": null, "trackId": 3, "name": "Matrix Block Sum", "difficulty": "Medium", "tag": "Array, Matrix, Prefix Sum", "platform": "LeetCode", "link": "https://example.com/problems/2102", "createdAt": "2023-06-09T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": "2D Prefix Sum", "solutionLink": null },
    { "id": 2103, "contestId": null, "trackId": 3, "name": "Find Pivot Index", "difficulty": "Easy", "tag": "Array, Prefix Sum", "platform": "Codeforces", "link": "https://example.com/problems/2103", "createdAt": "2023-06-10T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-15T15:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2113, "contestId": null, "trackId": 2, "name": "Course Schedule IV", "difficulty": "Medium", "tag": "Graphs, Topological sort, Floyd-Warshall", "platform": "LeetCode", "link": "https://example.com/problems/2113", "createdAt": "2023-06-11T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": "Transitive closure", "solutionLink": null },
    { "id": 2115, "contestId": null, "trackId": 2, "name": "All Paths From Source to Target", "difficulty": "Medium", "tag": "Graphs, DFS, Backtracking", "platform": "HackerRank", "link": "https://example.com/problems/2115", "createdAt": "2023-06-12T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-16T11:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2128, "contestId": null, "trackId": 5, "name": "Surrounded Regions", "difficulty": "Medium", "tag": "Graphs, DFS, BFS, Matrix", "platform": "LeetCode", "link": "https://example.com/problems/2128", "createdAt": "2023-06-13T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 2130, "contestId": null, "trackId": 5, "name": "Redundant Connection", "difficulty": "Medium", "tag": "Graphs, Union Find, DFS", "platform": "Codeforces", "link": "https://example.com/problems/2130", "createdAt": "2023-06-14T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-17T10:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2131, "contestId": null, "trackId": 5, "name": "Connecting Cities With Minimum Cost", "difficulty": "Medium", "tag": "Graphs, Union Find, MST, Heap", "platform": "LeetCode", "link": "https://example.com/problems/2131", "createdAt": "2023-06-15T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2133, "contestId": null, "trackId": 6, "name": "Map Sum Pairs", "difficulty": "Medium", "tag": "Trie, Design, Hash Table", "platform": "HackerRank", "link": "https://example.com/problems/2133", "createdAt": "2023-06-16T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-18T09:30:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2134, "contestId": null, "trackId": 6, "name": "Find K Pairs with Smallest Sums", "difficulty": "Medium", "tag": "Array, Heap", "platform": "LeetCode", "link": "https://example.com/problems/2134", "createdAt": "2023-06-17T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-19T11:00:00Z", "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 2136, "contestId": null, "trackId": 6, "name": "Word Search II", "difficulty": "Hard", "tag": "Trie, DFS, Backtracking, Matrix", "platform": "Codeforces", "link": "https://example.com/problems/2136", "createdAt": "2023-06-18T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2148, "contestId": null, "trackId": 7, "name": "Generate Parentheses", "difficulty": "Medium", "tag": "String, Backtracking, DP", "platform": "LeetCode", "link": "https://example.com/problems/2148", "createdAt": "2023-06-19T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-20T16:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2172, "contestId": null, "trackId": 1, "name": "Maximum Subarray", "difficulty": "Medium", "tag": "Array, DP, Divide and Conquer", "platform": "HackerRank", "link": "https://example.com/problems/2172", "createdAt": "2023-06-20T10:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-21T10:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 2780, "contestId": 700, "trackId": 2, "name": "Reconstruct Itinerary", "difficulty": "Hard", "tag": "Graphs, DFS, Eulerian Path", "platform": "LeetCode", "link": "https://example.com/problems/2780", "createdAt": "2023-06-21T11:00:00Z", "updatedAt": "2023-07-15T09:00:00Z", "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": "Hierholzer's algorithm", "solutionLink": null },

    { "id": 3001, "contestId": null, "trackId": 8, "name": "Climbing Stairs", "difficulty": "Easy", "tag": "DP, Math", "platform": "LeetCode", "link": "https://example.com/problems/3001", "createdAt": "2023-07-01T10:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-22T10:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 3008, "contestId": null, "trackId": 1, "name": "Wiggle Sort II", "difficulty": "Medium", "tag": "Sorting, Array", "platform": "Codeforces", "link": "https://example.com/problems/3008", "createdAt": "2023-07-02T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": "Requires careful partitioning", "solutionLink": null },
    { "id": 3009, "contestId": null, "trackId": 9, "name": "Binary Tree Level Order Traversal", "difficulty": "Medium", "tag": "Tree, BFS", "platform": "LeetCode", "link": "https://example.com/problems/3009", "createdAt": "2023-07-03T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-23T10:30:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 3010, "contestId": null, "trackId": 10, "name": "Longest Increasing Subsequence", "difficulty": "Medium", "tag": "DP, Binary Search", "platform": "HackerRank", "link": "https://example.com/problems/3010", "createdAt": "2023-07-04T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-24T11:00:00Z", "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 3148, "contestId": null, "trackId": 7, "name": "Permutations", "difficulty": "Medium", "tag": "Array, Backtracking", "platform": "LeetCode", "link": "https://example.com/problems/3148", "createdAt": "2023-11-19T00:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-25T16:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null },
    { "id": 3149, "contestId": null, "trackId": 7, "name": "Combinations", "difficulty": "Medium", "tag": "Array, Backtracking", "platform": "LeetCode", "link": "https://example.com/problems/3149", "createdAt": "2023-11-20T00:00:00Z", "updatedAt": null, "isSolved": false, "lastSolvedAt": null, "isFavorite": true, "notes": null, "solutionLink": null },
    { "id": 3150, "contestId": null, "trackId": 8, "name": "Unique Paths", "difficulty": "Medium", "tag": "DP, Math, Combinatorics", "platform": "LeetCode", "link": "https://example.com/problems/3150", "createdAt": "2023-11-21T10:00:00Z", "updatedAt": null, "isSolved": true, "lastSolvedAt": "2023-11-26T10:00:00Z", "isFavorite": false, "notes": null, "solutionLink": null }
  ]